{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","table","minWidth","card","border","borderRadius","padding","margin","backgroundColor","boxShadow","cardNumber","fontSize","color","cardUpdatedTime","tableSub","tableSubTitle","tableSubTitleHighlight","marquee","paddingTop","createData","name","calories","fat","carbs","protein","App","anchor","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","basename","AppBar","position","Toolbar","IconButton","edge","className","aria-label","onClick","Typography","variant","Drawer","onClose","clsx","role","onKeyDown","List","map","text","index","to","style","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","path","colSpan","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27909db3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n/* App Bar */\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n/* Logout Button */\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n\n/* Navigation Drawer */\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\n/* table */\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n/* card */\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\n\n/* router */\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n } from \"react-router-dom\";\n import { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n\n  table: {\n    minWidth: 400,\n  },\n\n  card : {\n    border : \"0px solid\",\n    borderRadius : 20,\n    padding : 20,\n    margin : 20,\n    backgroundColor: \"#3F51B5\",\n    boxShadow : \"10px 10px 10px 5px gray\"\n  },\n  cardNumber : {\n    fontSize : 72,\n    color : \"white\",\n  },\n  cardUpdatedTime : {\n    color : \"gray\"\n  },\n  \n\n  tableSub : {\n    border : 1,\n    width : \"100%\"\n  },\n  tableSubTitle : {\n    color : \"gray\",\n  },\n  tableSubTitleHighlight : {\n    color : \"white\",\n  },\n\n  marquee : {\n    paddingTop : 20\n  }\n}));\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n\nfunction App(){\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['2D Live', '3D Live'].map((text, index) => (\n          <Link to={index % 2 === 0 ? \"2dlive\" : \"3dlive\"} style={{textDecoration:\"none\"}}>\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n          </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <Router basename=\"/2dlive\">\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(\"left\", true)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            2D / 3D Live\n          </Typography>\n          \n        </Toolbar>\n      </AppBar>\n      \n      <Drawer anchor=\"left\" open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\n        {list(\"left\")}\n      </Drawer>\n\n\n      <marquee className={classes.marquee}>ထိုင်း ၃ လုံးထိုးဖို့ ဒိုင်ရှာမရရင် Viber 09777698807 ကို ဆက်သွယ်ပေးပါခင်ဗျာ</marquee>\n      <Switch>\n        <Route path=\"/2dlive\">\n            <div className={classes.card}>\n            <center ><span className={classes.cardNumber}>43</span></center>\n            <center className={classes.cardUpdatedTime}>Updated on 2020-10-20 12:34 PM</center>\n          </div>\n          \n          <div className={classes.card}>\n            <table  className={classes.tableSub}>\n              <tr>\n                <td colSpan=\"3\"><center><span className={classes.tableSubTitleHighlight}>12:00 PM</span></center></td>\n              </tr>\n              <tr>\n                <td><span className={classes.tableSubTitle}>SET</span></td>\n                <td><span className={classes.tableSubTitle}>Value</span></td>\n                <td><span className={classes.tableSubTitle}>2D</span></td>\n              </tr>\n              <tr>\n                <td><span className={classes.tableSubTitleHighlight}>1,435</span></td>\n                <td><span className={classes.tableSubTitleHighlight}>3,453</span></td>\n                <td><span className={classes.tableSubTitleHighlight}>34</span></td>\n              </tr>\n            </table>\n          </div>\n          \n          <div className={classes.card}>\n            <table  className={classes.tableSub}>\n              <tr>\n                <td colSpan=\"3\"><center><span className={classes.tableSubTitleHighlight}>4:30 PM</span></center></td>\n              </tr>\n              <tr>\n                <td><span className={classes.tableSubTitle}>SET</span></td>\n                <td><span className={classes.tableSubTitle}>Value</span></td>\n                <td><span className={classes.tableSubTitle}>2D</span></td>\n              </tr>\n              <tr>\n                <td><span className={classes.tableSubTitleHighlight}>1,435</span></td>\n                <td><span className={classes.tableSubTitleHighlight}>3,453</span></td>\n                <td><span className={classes.tableSubTitleHighlight}>34</span></td>\n              </tr>\n            </table>\n          </div>\n        </Route>\n\n        <Route path=\"/3dlive\">\n            <div className={classes.card}>\n            <center ><span className={classes.cardNumber}>443</span></center>\n            <center className={classes.cardUpdatedTime}>Updated on 2020-10-20 12:34 PM</center>\n          </div>\n        </Route>\n\n        <Route path=\"/\">\n            <Redirect to=\"/2dlive\" />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}